name: Deploy POC

on:
  workflow_dispatch:
    inputs:
      imageTag:
        type: text
      appName:
        type: text
        default: contoso
        required: true
      location:
        type: choice
        required: true
        default: canadacentral
        options:
          - asia
          - asiapacific
          - australia
          - australiacentral
          - australiacentral2
          - australiaeast
          - australiasoutheast
          - brazil
          - brazilsouth
          - brazilsoutheast
          - canada
          - canadacentral
          - canadaeast
          - centralindia
          - centralus
          - centraluseuap
          - centralusstage
          - eastasia
          - eastasiastage
          - eastus
          - eastus2
          - eastus2euap
          - eastus2stage
          - eastusstage
          - europe
          - france
          - francecentral
          - francesouth
          - germany
          - germanynorth
          - germanywestcentral
          - global
          - india
          - japan
          - japaneast
          - japanwest
          - jioindiacentral
          - jioindiawest
          - korea
          - koreacentral
          - koreasouth
          - northcentralus
          - northcentralusstage
          - northeurope
          - norway
          - norwayeast
          - norwaywest
          - southafrica
          - southafricanorth
          - southafricawest
          - southcentralus
          - southcentralusstage
          - southeastasia
          - southeastasiastage
          - southindia
          - swedencentral
          - switzerland
          - switzerlandnorth
          - switzerlandwest
          - uae
          - uaecentral
          - uaenorth
          - uk
          - uksouth
          - ukwest
          - unitedstates
          - unitedstateseuap
          - westcentralus
          - westeurope
          - westindia
          - westus
          - westus2
          - westus2stage
          - westus3
          - westusstage

env:
  APP_NAME: ${{ github.event.inputs.appName }} 
  LOCATION: ${{ github.event.inputs.location }}
  IMAGE_TAG: ${{ github.event.inputs.imageTag }}
  DEPLOYMENT_NAME: "pocdeployment"
  BUILD_CONFIGURATION: "Release"
  SOLUTION_NAME: "LegacyWebApp.sln"
  MOUNT_PATH: c:\files
jobs:
  deploy-poc-infra:
    name: Deploy base infrastructure
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1.0.5
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Restore the application
      run: nuget restore ${{ env.SOLUTION_NAME }}
    - name: Build the application
      run: msbuild ${{ env.SOLUTION_NAME }} /p:DeployOnBuild=true /p:PublishProfile=FolderProfile      
    - uses: azure/login@v1
      name: Login to Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Generate unique deployment name
      run: echo "DEPLOYMENT_NAME=$env:DEPLOYMENT_NAME-$((New-Guid).Guid)" >> $env:GITHUB_ENV
    - name: Deploy acr and storage account
      id: deploy_infra
      uses: Azure/arm-deploy@v1.0.6
      with:
        region: ${{ env.LOCATION }}
        scope: 'subscription'
        template: ./deploy/infra/infra.bicep
        deploymentName: ${{ env.DEPLOYMENT_NAME }}
        # Supply deployment parameter values.
        parameters: appName=${{ env.APP_NAME }} location=${{ env.LOCATION }} deploymentName=${{ env.DEPLOYMENT_NAME }}
    - name: Parse '${{ env.DEPLOYMENT_NAME }}' deployment outputs
      id: deploy_infra_outputs
      run: |
        echo "::set-output name=acr::$(az deployment sub show -n ${{ env.DEPLOYMENT_NAME }} --query properties.outputs.acr.value)"
        echo "::set-output name=rg::$(az deployment sub show -n ${{ env.DEPLOYMENT_NAME }} --query properties.outputs.rg.value)"
        echo "::set-output name=storage::$(az deployment sub show -n ${{ env.DEPLOYMENT_NAME }} --query properties.outputs.storage.value)"
    - name: Validate image tag
      if: ${{ env.IMAGE_TAG }} == ""
      run: echo "IMAGE_TAG=$env:GITHUB_SHA" >> $env:GITHUB_ENV
    - name: Login to acr
      run: az acr login --name ${{ fromJson(steps.deploy_infra_outputs.outputs.acr).name }}
    - name: Build the Docker image
      working-directory: ./src/LegacyWebApp
      run: docker build . --file Dockerfile --tag ${{ fromJson(steps.deploy_infra_outputs.outputs.acr).loginServer }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
    - name: Push the Docker image to acr
      run: docker push ${{ fromJson(steps.deploy_infra_outputs.outputs.acr).loginServer }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
    - name: Deploy App Service
      id: deploy_app
      uses: Azure/arm-deploy@v1.0.6
      with:
        region: ${{ env.LOCATION }}
        scope: 'resourcegroup'
        resourceGroupName: ${{ steps.deploy_infra_outputs.outputs.rg }}
        template: ./deploy/app/app.bicep
        deploymentName: ${{ env.DEPLOYMENT_NAME }}
        # Supply deployment parameter values.
        parameters: appName=${{ env.APP_NAME }} acrName=${{ fromJson(steps.deploy_infra_outputs.outputs.acr).name }} fileShareMountPath=${{ env.MOUNT_PATH }} storageAccountName=${{ steps.deploy_infra_outputs.outputs.storage }} imageTag=${{ env.IMAGE_TAG }}
    - name: Deploy container to Azure App Service
      uses: Azure/webapps-deploy@v2
      with: 
        app-name: ${{ steps.deploy_app.outputs.appServiceName }}
        images: ${{ fromJson(steps.deploy_infra_outputs.outputs.acr).loginServer }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
    - name: Smoke test
      uses: lakuapik/gh-actions-http-status@v1
      with:
        sites: https://${{ steps.deploy_app.outputs.appServiceName }}.azurewebsites.net/disk
        expected: 200
    
